@using System.Reflection
@using Innovative.Blazor.Components.Components.Form
@typeparam TModel

<RadzenTemplateForm TItem="TModel" Data="@Model" Submit="@OnSubmitPressed">
    <section class="rz-dialog-side-content-layout">
        @foreach (var group in OrderedColumnGroups)
        {
            <div class="form-column-group @GetColumnWidthClass(group.Key)">
                @foreach (var property in group.Value)
                {
                    var fieldAttribute = property.GetCustomAttribute<UIFormFieldAttribute>();

                    if (fieldAttribute?.FormComponent != null)
                    {
                        @RenderFormComponent(value : property.GetValue(Model), attribute: fieldAttribute)
                    }
                    else
                    {
                        @RenderPropertyField(property)     
                    }
                }
            </div>
        }

        @if (UngroupedProperties.Any())
        {
            <div class="form-ungrouped">
                @foreach (var property in UngroupedProperties)
                {
                    @RenderPropertyField(property)
                }
            </div>
        }

        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem">
        </RadzenStack>
    </section>
</RadzenTemplateForm>
