@namespace Innovative.Blazor.Components.Components
@using InnovativeCard = Innovative.Blazor.Components.Components.InnovativeCard
@typeparam TItem
<div>
    <InnovativeCard IsLoading="IsLoading" Title="@Title">
        <RadzenStack Style="@GetGridStyle()">

            @if (Data != null)
            {
                <RadzenDataGrid @ref="dataGrid"
                                TItem="TItem"
                                Data="@Data"
                                @bind-Value="@selectedItems"
                                AllowRowSelectOnRowClick="EnableRowSelection"
                                AllowPaging="@(Data.Count() > 20)"
                                RowSelect="SetSelectedItemsAsync"
                                ShowPagingSummary="true" PagingSummaryFormat="{2} items"
                                PagerHorizontalAlign="HorizontalAlign.Right"
                                AllowSorting="@allowSorting"
                                AllowFiltering="true"
                                FilterMode="FilterMode.Simple"
                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                PageSize="20">
                    <EmptyTemplate>
                        <p style="color: lightgrey; font-size: 24px; text-align: center; margin: 2rem;">No records to
                            display.</p>
                    </EmptyTemplate>
                    <Columns>
                        @foreach (var property in GetPropertiesWithAttributes())
                        {
                            <RadzenDataGridColumn TItem="TItem"
                                                  Property="@property.Name"
                                                  Title="@GetColumnTitle(property: property.PropertyInfo, attribute: property.GridField)"
                                                  Frozen="IsFrozenColumn(property: property.PropertyInfo)"
                                                  Sortable="@IsSortableColumn(property: property.PropertyInfo)"
                                                  SortOrder="@(property.Name == defaultSortField ? SortOrder.Ascending : null)"
                                                  Visible="@IsVisibleColumn(property: property.PropertyInfo)"
                                                  Filterable="true">
                                <Template>
                                    @if (HasCustomComponent(property: property.PropertyInfo))
                                    {
                                        @RenderCustomComponent(property: property.PropertyInfo, context: context!, gridField: property.GridField)
                                    }
                                    else
                                    {
                                        <div data-text="@property.PropertyInfo.GetValue(obj: context)">
                                            @property.PropertyInfo.GetValue(obj: context)
                                        </div>
                                    }
                                </Template>
                            </RadzenDataGridColumn>
                        }
                    </Columns>
                </RadzenDataGrid>
            }
        </RadzenStack>
    </InnovativeCard>
</div>
